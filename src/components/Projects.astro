---
import Project from "./Project.astro";
---
<div class="project-wrapper"> 
  <Project
    name="Lore CLI"
    description="A CLI to help dungeon masters manage campaign lore and notes in a low distraction setting. Fully open-source and written in Go using SQLite3."
    URL="https://github.com/jake-abed/lore"
    imgURL="/lore.webp" 
    techUsed="Go, SQLite3, & Charm Huh" />
  <Project
    name="Geistfeld"
    description="A top-down survival horror game featuring asynchronous multi-player inspired by Dark Souls message system. Features all original art, music, and code!"
    URL="https://genya-games.itch.io/geistfeld"
    imgURL="/geistfeld.webp" 
    techUsed="Godot, Deno, & Hono"/>
  <Project
    name="WTRMLN Chat"
    description="A fully anonymous chat app with disposable rooms. Written in Elixir's Phoenix framework with a PostgreSQL database."
    URL="https://wtrmln.chat"
    imgURL="/wtrmln-chat.webp"
    techUsed="Elixir, Phoenix, Tailwind CSS, & PostgreSQL" />
  <Project
    name="Koku: A Void Ant"
    description="A mini metroidvania game made for Godot Wild Jame #69! Aside from the font & engine, all art, music, & code were made from scratch in 9 days by yours truly."
    URL="https://genya-games.itch.io/koku-a-void-ant"
    imgURL="/koku.webp"
    techUsed="Godot" />
  <Project
    name="AOS Inventory Sync"
    description="A production web app to sync inventory between two disparate platforms. Features a RESTful API and a hand-rolled auth system. No longer live or publicly accessible."
    imgURL="/inventory-sync.webp"
    techUsed="Deno, Fresh, Preact, & Tailwind CSS" />
</div>

<style>
  .project-wrapper {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    gap: 3rem;
  } 
</style>

<script>
  function handleIntersect(entries) {
    entries.forEach((entry) => {
      const el = entry.target;

      if (entry.intersectionRatio >= 0.8) {
        el.classList.add("animation");
      }
    });
  }

  function createObserver(elements) {
    const opts = {
      root: null,
      rootMargin: "0px",
      threshold: 1.0,
    };

    const observer = new IntersectionObserver(handleIntersect, opts);

    for (const element of elements) {
      console.log("Observing: ", element);
      observer.observe(element);
    }
  }

  createObserver(document.querySelectorAll(".fade-up"));
</script>
